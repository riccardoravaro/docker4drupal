<?php

// autoload_real.php @generated by Composer

<<<<<<< HEAD
class ComposerAutoloaderInitDrupal8
=======
class ComposerAutoloaderInite56c8726cc78451d8bafd02b710ac905
>>>>>>> ea75da0d6d82e55b23a2a2f5ed629e3b52ee75d9
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

<<<<<<< HEAD
        spl_autoload_register(array('ComposerAutoloaderInitDrupal8', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInitDrupal8', 'loadClassLoader'));
=======
        spl_autoload_register(array('ComposerAutoloaderInite56c8726cc78451d8bafd02b710ac905', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInite56c8726cc78451d8bafd02b710ac905', 'loadClassLoader'));
>>>>>>> ea75da0d6d82e55b23a2a2f5ed629e3b52ee75d9

        $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION');
        if ($useStaticLoader) {
            require_once __DIR__ . '/autoload_static.php';

<<<<<<< HEAD
            call_user_func(\Composer\Autoload\ComposerStaticInitDrupal8::getInitializer($loader));
=======
            call_user_func(\Composer\Autoload\ComposerStaticInite56c8726cc78451d8bafd02b710ac905::getInitializer($loader));
>>>>>>> ea75da0d6d82e55b23a2a2f5ed629e3b52ee75d9
        } else {
            $map = require __DIR__ . '/autoload_namespaces.php';
            foreach ($map as $namespace => $path) {
                $loader->set($namespace, $path);
            }

            $map = require __DIR__ . '/autoload_psr4.php';
            foreach ($map as $namespace => $path) {
                $loader->setPsr4($namespace, $path);
            }

            $classMap = require __DIR__ . '/autoload_classmap.php';
            if ($classMap) {
                $loader->addClassMap($classMap);
            }
        }

        $loader->register(true);

        if ($useStaticLoader) {
<<<<<<< HEAD
            $includeFiles = Composer\Autoload\ComposerStaticInitDrupal8::$files;
=======
            $includeFiles = Composer\Autoload\ComposerStaticInite56c8726cc78451d8bafd02b710ac905::$files;
>>>>>>> ea75da0d6d82e55b23a2a2f5ed629e3b52ee75d9
        } else {
            $includeFiles = require __DIR__ . '/autoload_files.php';
        }
        foreach ($includeFiles as $fileIdentifier => $file) {
<<<<<<< HEAD
            composerRequireDrupal8($fileIdentifier, $file);
=======
            composerRequiree56c8726cc78451d8bafd02b710ac905($fileIdentifier, $file);
>>>>>>> ea75da0d6d82e55b23a2a2f5ed629e3b52ee75d9
        }

        return $loader;
    }
}

<<<<<<< HEAD
function composerRequireDrupal8($fileIdentifier, $file)
=======
function composerRequiree56c8726cc78451d8bafd02b710ac905($fileIdentifier, $file)
>>>>>>> ea75da0d6d82e55b23a2a2f5ed629e3b52ee75d9
{
    if (empty($GLOBALS['__composer_autoload_files'][$fileIdentifier])) {
        require $file;

        $GLOBALS['__composer_autoload_files'][$fileIdentifier] = true;
    }
}
